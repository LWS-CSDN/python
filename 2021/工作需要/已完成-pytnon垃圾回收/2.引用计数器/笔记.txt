1.引用计数器
1.1环状双向链表
在python程序中创建的任何对象都会放在refchain链表中
name='l'内部会创建一些数据[上一个对象,下一个对象,类型,引用个数,val=18]
age=18内部会创建一些数据[上一个对象,下一个对象,类型,引用个数,items=元素,元素个数]

在c源码中如何体现每个对象中都有相同的值

1.2类型封装结构体
data=3.14

内部会创建
_ob_next=refchain中的上一个对象
_ob_prev=refchain中的下一个对象
ob_refcnt=1
ob_type=float
ob_fval=3.14

1.3引用计数器
v1=3.14
v2=999
v3=(1,2,3)

当python程序运行时,会根据数据类型的不同找到其
对应的结构体,根据结构体中的字段进行创建相关的数据
然后将对象添加到refchain双线链表中

-引用
a=999
b=a

-删除引用
a=999
b=a
del b #b变量删除,b对应对象引用计数器-1
del a #a变量删除,a对应对象引用计数器-1

当一个对象的引用计数器为0时,意味着没有人再使用这个对象了
这个对象就是垃圾,垃圾回收
回收:
1.对象从refchain链表移除
2.将对象销毁,内存归还