轮询

客户端1                         服务器1   1,4,7请求
客户端2----代理--------服务器2    2,5,8请求
客户端3		     服务器3   3,6,9请求


加权轮询

客户端1                         服务器1（权重1）   1,3请求
客户端2----代理--------服务器2 （权重2）  2,4,7请求
客户端3		     服务器3  （权重3） 5,6,8,9请求


（不建议，因为如果那台服务器挂了）
iphash对客户端请求的ip进行hash操作,然后根据hash结果将同一客户端ip
的请求分发给同一台服务器进行处理,可以解决session不共享的问题
客户端1                         服务器1（权重1）   1,3请求
客户端2----代理--------服务器2 （权重2）  2,4,7请求
客户端3		     服务器3  （权重3） 5,6,8,9请求

更应该是redis使session共享

动静分离
动静分离,在我们的软件开发中,有些请求是需要后台处理的,有些请求是不需要经过后台处理的
如(html,css,js,jpg等等文件),这些不需要经过后台处理的文件称为静态文件,让动态网站里的动态网页
根据一定规则把不变的资源和经常变的资源区分开来,动静资源做好了拆分以后，我们就可以
根据静态资源的特点将其做缓存操作,提高资源响应的速度

客户端-ngnix-静态请求本地-Nginx
	    -动态服务请求-web服务


